{"version":3,"file":"static/webpack/static\\development\\pages\\me.js.9eaeb4f67273d46616a6.hot-update.js","sources":["webpack:///./components/Form.jsx"],"sourcesContent":["import React from \"react\";\r\n// import { withFormik, Form, Field } from \"formik\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { Component } from \"react\";\r\n\r\nimport { GET_MOVIES_QUERY } from \"./Movies\";\r\n\r\nconst ADD_MOVIE_MUTATION = gql`\r\n  mutation ADD_MOVIE_MUTATION($title: String!) {\r\n    createMovie(data: { title: $title }) {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    title: \"Filme 3\",\r\n    rate: 10\r\n  };\r\n  handleSubmit = async (e, addMovie) => {\r\n    e.preventDefault();\r\n    const res = await addMovie({ variables: this.state });\r\n  };\r\n  handleChange = ({ target }) => {\r\n    const { name, value, type } = target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n  handleUpdate = (cache, payload) => {\r\n    console.log({ cache }, { payload });\r\n\r\n    const data = cache.readQuery({ query: GET_MOVIES_QUERY });\r\n    data.movies.push(payload.data.createMovie);\r\n    cache.writeQuery({ query: GET_MOVIES_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_MOVIE_MUTATION}\r\n        variables={this.state}\r\n        update={this.handleUpdate}\r\n        optimisticResponse={{\r\n          __typename: \"Mutation\",\r\n          createMovie: {\r\n            __typename: \"Movie\"\r\n          }\r\n        }}\r\n      >\r\n        {(addMovie, { loading, error }) => {\r\n          // if (loading) return <p>Loading...</p>;\r\n          if (error) return <p>Error, my dude!!</p>;\r\n          return (\r\n            <form onSubmit={e => this.handleSubmit(e, addMovie)}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Movie\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                name=\"rate\"\r\n                placeholder=\"Rate\"\r\n                value={this.state.rate}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button disabled={loading} type=\"submit\">\r\n                Add rate\r\n              </button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\n// const FormTemplate = ({ values, isSubmitting, handleSubmit }) => (\r\n//   <Mutation mutation={ADD_MOVIE_MUTATION} variables={values}>\r\n//     {(addMovie, payload) => {\r\n//       return (\r\n//         <form onSubmit={() => handleSubmit(addMovie)}>\r\n//           <Field type=\"text\" name=\"title\" placeholder=\"Movie\" />\r\n//           <Field type=\"number\" name=\"rate\" placeholder=\"Rate\" />\r\n//           <button type=\"submit\" disabled={isSubmitting}>\r\n//             Add rate\r\n//           </button>\r\n//         </form>\r\n//       );\r\n//     }}\r\n//   </Mutation>\r\n// );\r\n\r\n// const FormikApp = withFormik({\r\n//   mapPropsToValues({ title, rate }) {\r\n//     return {\r\n//       title: title || \"\",\r\n//       rate: rate || \"\"\r\n//     };\r\n//   },\r\n//   handleSubmit(addMovie, values, { resetForm, setErrors, setSubmitting }) {\r\n//     const res = addMovie({ variables: values });\r\n//     console.log(res);\r\n\r\n//     setTimeout(() => {\r\n//       console.log(values);\r\n\r\n//       if (values.title === \"xxx\") {\r\n//         setErrors({ title: \"Movie already exists\" });\r\n//       } else {\r\n//         resetForm();\r\n//       }\r\n//       setSubmitting(false);\r\n//     }, 500);\r\n//   }\r\n// })(FormTemplate);\r\n\r\n// export default FormikApp;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAQA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;AA7DA;AACA;AA+DA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}