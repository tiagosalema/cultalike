{"version":3,"file":"static/webpack/static\\development\\pages\\me.js.bbbd758b861a619123e2.hot-update.js","sources":["webpack:///./components/Form.jsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js","webpack:///./node_modules/core-js/library/fn/parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-float.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/core-js/library/modules/es6.parse-float.js"],"sourcesContent":["import React from \"react\";\r\nimport Router from \"next/router\";\r\n// import { withFormik, Form, Field } from \"formik\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { Component } from \"react\";\r\n\r\nconst ADD_MOVIE_MUTATION = gql`\r\n  mutation ADD_MOVIE_MUTATION($title: String!) {\r\n    createMovie(data: { title: $title }) {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    title: \"Filme 3\",\r\n    rate: \"100\"\r\n  };\r\n  handleSubmit = async (e, addMovie) => {\r\n    e.preventDefault();\r\n    const res = await addMovie({ variables: this.state });\r\n    Router.push(\"/me\");\r\n    console.log(res);\r\n  };\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    if (name === \"value\") name = parseFloat(name);\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation mutation={ADD_MOVIE_MUTATION} variables={this.state}>\r\n        {(addMovie, { loading, error }) => {\r\n          if (loading) return <p>Loading...</p>;\r\n          if (error) return <p>Error, my dude!!</p>;\r\n          return (\r\n            <form onSubmit={e => this.handleSubmit(e, addMovie)}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Movie\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                name=\"rate\"\r\n                placeholder=\"Rate\"\r\n                value={this.state.rate}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button disabled={loading} type=\"submit\">\r\n                Add rate\r\n              </button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\n// const FormTemplate = ({ values, isSubmitting, handleSubmit }) => (\r\n//   <Mutation mutation={ADD_MOVIE_MUTATION} variables={values}>\r\n//     {(addMovie, payload) => {\r\n//       return (\r\n//         <form onSubmit={() => handleSubmit(addMovie)}>\r\n//           <Field type=\"text\" name=\"title\" placeholder=\"Movie\" />\r\n//           <Field type=\"number\" name=\"rate\" placeholder=\"Rate\" />\r\n//           <button type=\"submit\" disabled={isSubmitting}>\r\n//             Add rate\r\n//           </button>\r\n//         </form>\r\n//       );\r\n//     }}\r\n//   </Mutation>\r\n// );\r\n\r\n// const FormikApp = withFormik({\r\n//   mapPropsToValues({ title, rate }) {\r\n//     return {\r\n//       title: title || \"\",\r\n//       rate: rate || \"\"\r\n//     };\r\n//   },\r\n//   handleSubmit(addMovie, values, { resetForm, setErrors, setSubmitting }) {\r\n//     const res = addMovie({ variables: values });\r\n//     console.log(res);\r\n\r\n//     setTimeout(() => {\r\n//       console.log(values);\r\n\r\n//       if (values.title === \"xxx\") {\r\n//         setErrors({ title: \"Movie already exists\" });\r\n//       } else {\r\n//         resetForm();\r\n//       }\r\n//       setSubmitting(false);\r\n//     }, 500);\r\n//   }\r\n// })(FormTemplate);\r\n\r\n// export default FormikApp;\r\n","module.exports = require(\"core-js/library/fn/parse-float\");","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","require('../modules/es6.parse-float');\nmodule.exports = require('../modules/_core').parseFloat;\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;AA9CA;AACA;AAgDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AC3GA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;A","sourceRoot":""}